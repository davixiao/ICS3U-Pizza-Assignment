/*
David Xiao
04/12/2019
Big Buck's Brown Bomb Pizzaria:
Ordering system that calculates the total cost for a customer based on the size and number of
toppings they select. Then provides a receipt.
 */
package xiaopizzaprogram;
import java.text.DecimalFormat;

/**
 *
 * @author davidx
 */
public class BuckPizzaForm extends javax.swing.JFrame {
    // initialize global variables
    double subTotal = 5;
    double sizeCost = 5;    // default select is small
    double topCost = 0;
    double dipCost = 0;
    int numDip = 0;
    int numTop = 0;
    double pricePerTop = 0.5;
    double pricePerDip = 1;
    boolean discount = false; // is there a discount for extra large
    double discountRate = 1.0/3.0;
    double discountAmt;
    double totalCost;
    
    // variables to keep track of which dips are selected
    int selectDip1 = 0;
    int selectDip2 = 0;
    int selectDip3 = 0;
    int selectDip4 = 0;
    int selectDip5 = 0;
    
    // variables to keep track of which toppings are selected
    int selectTop1 = 0;
    int selectTop2 = 0;
    int selectTop3 = 0;
    int selectTop4 = 0;
    int selectTop5 = 0;
    
    // text formatting
    DecimalFormat df = new DecimalFormat("$#0.00");

    /**
     * Creates new form BuckPizzaForm
     */
    public BuckPizzaForm() {
        initComponents();
    }

    // custom function that updates all totals and subtotals and text output on the form
    private void updateForm() {
        // Topping cost and dip cost depend on number of toppings and dips
        // multiply price per top/dip by num top/dip
        topCost = numTop * pricePerTop;
        dipCost = numDip * pricePerDip;
        // total cost is the sum of all the sub costs
        subTotal = sizeCost + topCost + dipCost;
        
        // there will be a discount when
        // update cost total labels
        lblSzCst.setText(df.format(sizeCost));
        lblTopCst.setText(df.format(topCost));
        lblDipCst.setText(df.format(dipCost));
        lblTotalCst.setText(df.format(subTotal));
        
        // update price labels
        lblCostPerTop.setText("Cost per Topping - " + df.format(pricePerTop));
        lblCostPerDip.setText("Cost per Dip - " + df.format(pricePerDip));

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnGrpSz = new javax.swing.ButtonGroup();
        btnGrpDip = new javax.swing.ButtonGroup();
        backGroundImg = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        top5 = new javax.swing.JCheckBox();
        dip5 = new javax.swing.JCheckBox();
        dip1 = new javax.swing.JCheckBox();
        btnCalc = new javax.swing.JButton();
        dip2 = new javax.swing.JCheckBox();
        dip3 = new javax.swing.JCheckBox();
        dip4 = new javax.swing.JCheckBox();
        lblCostPerTop = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblSizeC = new javax.swing.JLabel();
        lblSizeCost1 = new javax.swing.JLabel();
        lblSizeCost2 = new javax.swing.JLabel();
        lblSizeCost3 = new javax.swing.JLabel();
        lblSzCst = new javax.swing.JLabel();
        lblTopCst = new javax.swing.JLabel();
        lblTotalCst = new javax.swing.JLabel();
        lblDipCst = new javax.swing.JLabel();
        lblCostPerDip = new javax.swing.JLabel();
        btnSmall = new javax.swing.JRadioButton();
        btnMedium = new javax.swing.JRadioButton();
        btnLarge = new javax.swing.JRadioButton();
        btnXL = new javax.swing.JRadioButton();
        top1 = new javax.swing.JCheckBox();
        top2 = new javax.swing.JCheckBox();
        top3 = new javax.swing.JCheckBox();
        lblSizeTitle = new javax.swing.JLabel();
        lblTopTitle = new javax.swing.JLabel();
        top4 = new javax.swing.JCheckBox();
        lblTopTitle1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(backGroundImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 755, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        top5.setText("Bacon");
        top5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top5ActionPerformed(evt);
            }
        });
        jPanel2.add(top5, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 459, -1, -1));

        dip5.setText("Shredded Doritos");
        dip5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dip5ActionPerformed(evt);
            }
        });
        jPanel2.add(dip5, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 459, -1, -1));

        dip1.setText("Milk Chocolate");
        dip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dip1ActionPerformed(evt);
            }
        });
        jPanel2.add(dip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 343, -1, -1));

        btnCalc.setText("Click here for Receipt");
        btnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcActionPerformed(evt);
            }
        });
        jPanel2.add(btnCalc, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 513, 170, 219));

        dip2.setText("Vanilla Ice Cream");
        dip2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dip2ActionPerformed(evt);
            }
        });
        jPanel2.add(dip2, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 372, -1, -1));

        dip3.setText("Liquid Sugar");
        dip3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dip3ActionPerformed(evt);
            }
        });
        jPanel2.add(dip3, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 401, -1, -1));

        dip4.setText("Kool-Aid Mix");
        dip4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dip4ActionPerformed(evt);
            }
        });
        jPanel2.add(dip4, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 430, -1, -1));

        lblCostPerTop.setText("Cost per Topping - $0.50");
        jPanel2.add(lblCostPerTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 315, -1, -1));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSizeC.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblSizeC.setText("Size Cost: ");
        jPanel1.add(lblSizeC, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, -1, -1));

        lblSizeCost1.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblSizeCost1.setText("Topping Cost: ");
        jPanel1.add(lblSizeCost1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 35, -1, -1));

        lblSizeCost2.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblSizeCost2.setText("Dip Cost: ");
        jPanel1.add(lblSizeCost2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 61, -1, -1));

        lblSizeCost3.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblSizeCost3.setText("Subtotal: ");
        jPanel1.add(lblSizeCost3, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 114, -1, -1));

        lblSzCst.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblSzCst.setText("$5.00");
        jPanel1.add(lblSzCst, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 9, -1, -1));

        lblTopCst.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblTopCst.setText("$0.00");
        jPanel1.add(lblTopCst, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 35, -1, -1));

        lblTotalCst.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblTotalCst.setText("$5.00");
        jPanel1.add(lblTotalCst, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 114, -1, -1));

        lblDipCst.setFont(new java.awt.Font("PingFang TC", 0, 14)); // NOI18N
        lblDipCst.setText("$0.00");
        jPanel1.add(lblDipCst, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 61, -1, -1));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 350, 140));

        lblCostPerDip.setText("Cost per Dip - $1.00");
        jPanel2.add(lblCostPerDip, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 315, -1, -1));

        btnGrpSz.add(btnSmall);
        btnSmall.setSelected(true);
        btnSmall.setText("Small - $5.00");
        btnSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSmallActionPerformed(evt);
            }
        });
        jPanel2.add(btnSmall, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 145, -1, -1));

        btnGrpSz.add(btnMedium);
        btnMedium.setText("Medium - $8.00");
        btnMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMediumActionPerformed(evt);
            }
        });
        jPanel2.add(btnMedium, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 174, -1, -1));

        btnGrpSz.add(btnLarge);
        btnLarge.setText("Large - $10.00");
        btnLarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLargeActionPerformed(evt);
            }
        });
        jPanel2.add(btnLarge, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 203, -1, -1));

        btnGrpSz.add(btnXL);
        btnXL.setText("Extra Large - $12.00");
        btnXL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXLActionPerformed(evt);
            }
        });
        jPanel2.add(btnXL, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 232, -1, -1));

        top1.setText("Gummy Worms");
        top1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top1ActionPerformed(evt);
            }
        });
        jPanel2.add(top1, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 343, -1, -1));

        top2.setText("Chocolate Chips");
        top2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top2ActionPerformed(evt);
            }
        });
        jPanel2.add(top2, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 372, -1, -1));

        top3.setText("Sprinkles");
        top3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top3ActionPerformed(evt);
            }
        });
        jPanel2.add(top3, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 401, -1, -1));

        lblSizeTitle.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        lblSizeTitle.setText("1. Select a Size");
        jPanel2.add(lblSizeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 112, -1, -1));

        lblTopTitle.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        lblTopTitle.setText("2. Select a Topping (Optional)");
        jPanel2.add(lblTopTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        top4.setText("Lolipops");
        top4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top4ActionPerformed(evt);
            }
        });
        jPanel2.add(top4, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 430, -1, -1));

        lblTopTitle1.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        lblTopTitle1.setText("3. Select a Dip (Optional)");
        jPanel2.add(lblTopTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 282, -1, -1));

        lblTitle.setFont(new java.awt.Font("Phosphate", 3, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 51, 0));
        lblTitle.setText("Big Buck's Brown Bomb Pizzaria");
        jPanel2.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 16, -1, 61));

        txtReceipt.setEditable(false);
        txtReceipt.setColumns(20);
        txtReceipt.setRows(5);
        jScrollPane1.setViewportView(txtReceipt);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 513, 361, 219));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents
       
    // ---------------------------------------------------------------------
    // Pizza Size Options 
    // ---------------------------------------------------------------------

    // actions when user selects small pizza option
    private void btnSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSmallActionPerformed
        // reset size cost to amount for small
        sizeCost = 5;
        pricePerTop = 0.5; // price per topping and dip
        pricePerDip = 1;
        discount = false; // no discount
        updateForm();
    }//GEN-LAST:event_btnSmallActionPerformed
    
    // actions when user selects medium pizza option
    private void btnMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMediumActionPerformed
        // reset size cost to amount for medium
        sizeCost = 8;
        pricePerTop = 0.75; // price per topping and dip
        pricePerDip = 1.25;
        discount = false;   // no discount
        updateForm();
    }//GEN-LAST:event_btnMediumActionPerformed
    
    // actions when user selects large pizza option
    private void btnLargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLargeActionPerformed
        // reset size cost to amount for large
        sizeCost = 10;
        pricePerTop = 1; // price per topping and dip
        pricePerDip = 1.5;
        discount = false; // no discount
        updateForm();
    }//GEN-LAST:event_btnLargeActionPerformed

    // actions when user selects extra large pizza
    private void btnXLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXLActionPerformed
        // reset size cost to amount for extra large
        sizeCost = 12;
        pricePerTop = 1.25; // price per topping and dip
        discount = true; // there is a disocunt
        pricePerDip = 1.75;
        updateForm();
    }//GEN-LAST:event_btnXLActionPerformed
    // ---------------------------------------------------------------------
    // Topping Options
    // ---------------------------------------------------------------------
    
    // select/deselect topping 1
    private void top1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top1ActionPerformed
        selectTop1++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectTop1 % 2 == 0) {
            numTop--;   // deselected topping --> take one away
        } else {
            numTop++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_top1ActionPerformed

    // select/deselect topping 2
    private void top2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top2ActionPerformed
        selectTop2++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectTop2 % 2 == 0) {
            numTop--;   // deselected topping --> take one away
        } else {
            numTop++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_top2ActionPerformed

    // select/deselect topping 3
    private void top3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top3ActionPerformed
        selectTop3++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectTop3 % 2 == 0) {
            numTop--;   // deselected topping --> take one away
        } else {
            numTop++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_top3ActionPerformed

    // select/deselect topping 4
    private void top4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top4ActionPerformed
        selectTop4++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectTop4 % 2 == 0) {
            numTop--;   // deselected topping --> take one away
        } else {
            numTop++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_top4ActionPerformed

    // select/deselect topping 5
    private void top5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top5ActionPerformed
        selectTop5++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectTop5 % 2 == 0) {
            numTop--;   // deselected topping --> take one away
        } else {
            numTop++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_top5ActionPerformed

    // ---------------------------------------------------------------------
    // Topping Options
    // ---------------------------------------------------------------------
    
    // select/deselect dip1
    private void dip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dip1ActionPerformed
        selectDip1++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectDip1 % 2 == 0) {
            numDip--;   // deselected topping --> take one away
        } else {
            numDip++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_dip1ActionPerformed

    // select/deselect dip2
    private void dip2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dip2ActionPerformed
        selectDip2++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectDip2 % 2 == 0) {
            numDip--;   // deselected topping --> take one away
        } else {
            numDip++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_dip2ActionPerformed

    // select/deselect dip3
    private void dip3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dip3ActionPerformed
        selectDip3++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectDip3 % 2 == 0) {
            numDip--;   // deselected topping --> take one away
        } else {
            numDip++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_dip3ActionPerformed

    // select/deselect dip4
    private void dip4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dip4ActionPerformed
        selectDip4++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectDip4 % 2 == 0) {
            numDip--;   // deselected topping --> take one away
        } else {
            numDip++;   // selected topping --> add one
        }
        updateForm();    }//GEN-LAST:event_dip4ActionPerformed
    
    // select/deselect dip5
    private void dip5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dip5ActionPerformed
        selectDip5++;   // keep track of the number of times user clicks this topping
        
        // every 2 clicks, that means the user deselects
        if (selectDip5 % 2 == 0) {
            numDip--;   // deselected topping --> take one away
        } else {
            numDip++;   // selected topping --> add one
        }
        updateForm();
    }//GEN-LAST:event_dip5ActionPerformed

    // ---------------------------------------------------------------------
    // Output Receipt
    // ---------------------------------------------------------------------
    
    private void btnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcActionPerformed
        // give a discount when the user selects an extra large
        // if no discount, the amount is 0
        if (discount) {
            // discount amount is the subTotal multiply the discount rate
            discountAmt = subTotal * discountRate; 
            totalCost = subTotal - discountAmt;   // total cost is the discount amount subtracted off of the subTotal
        } else {
            discountAmt = 0;
        }
        
        // create our output message (receipt)
        String output = "=======Big Buck's Brown Bomb Pizzaria=======\n" +
                "Pizza Size\t\t\t" + df.format(sizeCost) + "\n" +
                "Toppings\t\t\t" + df.format(topCost) + "\n" +
                "Number of Toppings\t" + numTop + "\n" +
                "Dips\t\t\t" + df.format(dipCost) + "\n" +
                "Number of Dips\t" + numDip + "\n\n" +
                "Subtotal\t\t\t" + df.format(subTotal) + "\n\n---------------------------------------------\n" +
                "Discount Amount\t\t" + "(" + df.format(discountAmt) + ")\n\n" +
                "Total\t\t\t" + df.format(totalCost);
        
        // set our output to the text area
        txtReceipt.setText(output);
    }//GEN-LAST:event_btnCalcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuckPizzaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuckPizzaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuckPizzaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuckPizzaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuckPizzaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backGroundImg;
    private javax.swing.JButton btnCalc;
    private javax.swing.ButtonGroup btnGrpDip;
    private javax.swing.ButtonGroup btnGrpSz;
    private javax.swing.JRadioButton btnLarge;
    private javax.swing.JRadioButton btnMedium;
    private javax.swing.JRadioButton btnSmall;
    private javax.swing.JRadioButton btnXL;
    private javax.swing.JCheckBox dip1;
    private javax.swing.JCheckBox dip2;
    private javax.swing.JCheckBox dip3;
    private javax.swing.JCheckBox dip4;
    private javax.swing.JCheckBox dip5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCostPerDip;
    private javax.swing.JLabel lblCostPerTop;
    private javax.swing.JLabel lblDipCst;
    private javax.swing.JLabel lblSizeC;
    private javax.swing.JLabel lblSizeCost1;
    private javax.swing.JLabel lblSizeCost2;
    private javax.swing.JLabel lblSizeCost3;
    private javax.swing.JLabel lblSizeTitle;
    private javax.swing.JLabel lblSzCst;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTopCst;
    private javax.swing.JLabel lblTopTitle;
    private javax.swing.JLabel lblTopTitle1;
    private javax.swing.JLabel lblTotalCst;
    private javax.swing.JCheckBox top1;
    private javax.swing.JCheckBox top2;
    private javax.swing.JCheckBox top3;
    private javax.swing.JCheckBox top4;
    private javax.swing.JCheckBox top5;
    private javax.swing.JTextArea txtReceipt;
    // End of variables declaration//GEN-END:variables
}
